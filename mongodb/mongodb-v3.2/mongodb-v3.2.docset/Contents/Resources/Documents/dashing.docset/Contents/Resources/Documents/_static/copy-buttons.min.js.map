{"version":3,"file":"copy-buttons.min.js","sources":["../src/js/util.js","../src/js/componentCopyButtons.js","../src/main/copyButtonsController.js"],"sourcesContent":["export function isLeafNode($node) {\n    return !$node.siblings('ul:not(.simple)').length;\n}\n\nexport function toArray(arrayLike) {\n    const result = [];\n    for (let i = 0; i < arrayLike.length; i += 1) {\n        result.push(arrayLike[i]);\n    }\n\n    return result;\n}\n\n/* Checks a whitelist for non-leaf nodes that should trigger a full page reload */\nexport function requiresPageload($node) {\n    const docsExcludedNav = window.docsExcludedNav;\n\n    if (!docsExcludedNav || !docsExcludedNav.length) {\n        return false;\n    }\n\n    for (let i = 0; i < docsExcludedNav.length; i += 1) {\n        if ($node[0].href.indexOf(docsExcludedNav[i]) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function throttle(func, wait) {\n    let args = null;\n    let result = null;\n    let timeout = null;\n    let previous = 0;\n\n    function later() {\n        previous = Date.now();\n        timeout = null;\n        result = func.apply(...args);\n        if (!timeout) {\n            args = null;\n        }\n    }\n\n    return function(...newArgs) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        args = newArgs;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                window.clearTimeout(timeout);\n                timeout = null;\n            }\n\n            previous = now;\n            result = func(...args);\n            if (!timeout) {\n                args = null;\n            }\n        } else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n\n        return result;\n    };\n}\n\nexport function reportAnalytics(eventName, data) {\n    try {\n        window.analytics.track(eventName, data);\n    } catch (err) {\n        console.error(`Error reporting analytics: ${eventName}`, err);\n    }\n}\n\nexport class Dispatcher {\n    constructor() {\n        this.listeners = [];\n    }\n\n    listen(handler) {\n        this.listeners.push(handler);\n    }\n\n    dispatch(ctx) {\n        for (let i = 0; i < this.listeners.length; i += 1) {\n            this.listeners[i](ctx);\n        }\n    }\n}\n","import {reportAnalytics, toArray} from './util';\n\nconst TOOLTIP_STATE_ACTIVE = 'code-button__tooltip--active';\nconst TOOLTIP_STATE_INACTIVE = 'code-button__tooltip--inactive';\n\nfunction cancelAndWait(f, timeoutID, ms) {\n    if (timeoutID >= 0) {\n        window.clearTimeout(timeoutID);\n    }\n\n    return window.setTimeout(f, ms);\n}\n\nfunction isCopyableCodeBlock(block) {\n    return Boolean(block.getElementsByClassName('copyable-code-block')[0]);\n}\n\nexport function setup() {\n    const buttonCodeBlocks = document.getElementsByClassName('button-code-block');\n    const copyableBlocks = toArray(buttonCodeBlocks).filter(isCopyableCodeBlock);\n\n    for (const block of copyableBlocks) {\n        const highlightElement = block.getElementsByClassName('highlight')[0];\n        if (!highlightElement) {\n            return;\n        }\n\n        const buttonRow = block.getElementsByClassName('button-row')[0];\n        const copyButton = buttonRow.getElementsByClassName('code-button--copy')[0];\n        if (!copyButton) {\n            return;\n        }\n\n        const popupElement = document.createElement('div');\n        popupElement.innerText = 'copied';\n        popupElement.classList.add('code-button__tooltip');\n        popupElement.classList.add(TOOLTIP_STATE_INACTIVE);\n        let closePopupTimer = -1;\n\n        copyButton.appendChild(popupElement);\n        copyButton.addEventListener('click', () => {\n            const tempElement = document.createElement('textarea');\n            tempElement.style.position = 'fixed';\n            document.body.appendChild(tempElement);\n            const text = highlightElement.innerText.trim();\n            tempElement.value = text;\n            tempElement.select();\n\n            try {\n                const successful = document.execCommand('copy');\n                if (!successful) {\n                    throw new Error('Failed to copy');\n                }\n\n                popupElement.classList.replace(TOOLTIP_STATE_INACTIVE, TOOLTIP_STATE_ACTIVE);\n                closePopupTimer = cancelAndWait(() => {\n                    popupElement.classList.replace(TOOLTIP_STATE_ACTIVE, TOOLTIP_STATE_INACTIVE);\n                }, closePopupTimer, 1500);\n            } catch (err) {\n                console.error(err);\n            }\n\n            document.body.removeChild(tempElement);\n\n            reportAnalytics('Codeblock Copied', {'code': text});\n        });\n    }\n}\n","import * as componentCopyButtons from '../js/componentCopyButtons';\n\n$(() => {\n    componentCopyButtons.setup();\n});\n"],"names":["listeners","handler","push","ctx","i","this","length","TOOLTIP_STATE_ACTIVE","TOOLTIP_STATE_INACTIVE","isCopyableCodeBlock","block","Boolean","getElementsByClassName","setup","copyableBlocks","arrayLike","result","toArray","document","filter","highlightElement","copyButton","popupElement","createElement","innerText","classList","add","closePopupTimer","appendChild","addEventListener","tempElement","style","position","body","f","timeoutID","ms","text","trim","value","select","execCommand","Error","replace","clearTimeout","window","setTimeout","err","error","removeChild","eventName","data","analytics","track","code","$"],"mappings":"qmBA6EaA,+CAGFC,QACED,UAAUE,KAAKD,oCAGfE,OACA,IAAIC,EAAI,EAAGA,EAAIC,KAAKL,UAAUM,OAAQF,GAAK,OACvCJ,UAAUI,GAAGD,cCpFxBI,EAAuB,+BACvBC,EAAyB,iCAU/B,SAASC,EAAoBC,UAClBC,QAAQD,EAAME,uBAAuB,uBAAuB,IAGhE,SAASC,YAENC,EDfH,SAAiBC,WACdC,KACGZ,EAAI,EAAGA,EAAIW,EAAUT,OAAQF,GAAK,IAChCF,KAAKa,EAAUX,WAGnBY,ECSgBC,CADEC,SAASN,uBAAuB,sBACRO,OAAOV,uBAE7CC,EAASI,KACVM,EAAmBV,EAAME,uBAAuB,aAAa,OAC9DQ,uBAKCC,EADYX,EAAME,uBAAuB,cAAc,GAChCA,uBAAuB,qBAAqB,OACpES,uBAICC,EAAeJ,SAASK,cAAc,SAC/BC,UAAY,WACZC,UAAUC,IAAI,0BACdD,UAAUC,IAAIlB,OACvBmB,GAAmB,IAEZC,YAAYN,KACZO,iBAAiB,QAAS,eAC3BC,EAAcZ,SAASK,cAAc,cAC/BQ,MAAMC,SAAW,iBACpBC,KAAKL,YAAYE,OAtCfI,EAAGC,EAAWC,EAuCnBC,EAAOjB,EAAiBI,UAAUc,SAC5BC,MAAQF,IACRG,iBAGWtB,SAASuB,YAAY,cAE9B,IAAIC,MAAM,oBAGPjB,UAAUkB,QAAQnC,EAAwBD,GAjDhD2B,EAkDyB,aACfT,UAAUkB,QAAQpC,EAAsBC,IAnDpC4B,EAoDD,MApDVD,EAoDPR,IAnDE,UACNiB,aAAaT,KAGjBU,OAAOC,WAAWZ,EAAGE,GAgDlB,MAAOW,WACGC,MAAMD,YAGTd,KAAKgB,YAAYnB,GDK/B,SAAyBoB,EAAWC,cAE5BC,UAAUC,MAAMH,EAAWC,GACpC,MAAOJ,WACGC,oCAAoCE,EAAaH,KCPrC,oBAAqBO,KAAQjB,aA3CjCvB,iBAAgB,oECnBxCyC,EAAE"}